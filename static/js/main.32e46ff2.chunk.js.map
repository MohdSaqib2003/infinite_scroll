{"version":3,"sources":["ArticlesList.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","App","useState","list","setList","page","setPage","useEffect","a","ArticlesList","get","params","then","response","data","console","log","catch","error","window","addEventListener","innerHeight","document","documentElement","scrollTop","offsetHeight","renderedList","map","el","i","className","style","border","margin","channel","nid","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8QACeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAU,kD,OC8DCC,EAvDH,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAJN,GAIlB,mBAAOG,EAAP,KAAaC,EAAb,KASAC,oBAAS,sBAAC,sBAAAC,EAAA,sDACRC,EAAaC,IAAI,GAAI,CACnBC,OAAQ,CAAEN,KAAMA,KAEfO,MAAK,SAAAC,GACJT,EAAQ,GAAD,mBAAKD,GAAL,YAAcU,EAASC,QAC9BC,QAAQC,IAAIH,MAEbI,OAAM,SAAAC,GACLH,QAAQC,IAAIE,MAEhBH,QAAQC,IAAIb,EAAME,GAXV,2CAYP,CAACA,IAMJc,OAAOC,iBAAiB,UAAU,WAC5BD,OAAOE,YAAcC,SAASC,gBAAgBC,WAAaF,SAASC,gBAAgBE,eAEtFV,QAAQC,IAAI,wBAAyBG,OAAOE,aAC5CN,QAAQC,IAAI,wCAAyCM,SAASC,gBAAgBC,WAC9ET,QAAQC,IAAI,2CAA4CM,SAASC,gBAAgBE,cARnFnB,EAAQD,EAAO,OAejB,IAAMqB,EAAevB,EAAKwB,KAAI,SAACC,EAAIC,GACjC,OACE,sBAAaC,UAAU,YAAYC,MAAO,CAAEC,OAAQ,kBAAmBC,OAAQ,QAA/E,UACE,0CAAaL,EAAGM,QAAhB,OACA,yCAAYN,EAAGO,IAAf,SAFQN,MAMd,OACE,qBAAKE,MAAO,CAAEK,UAAW,UAAzB,SACGV,KChDQW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzB,SAAS0B,eAAe,SAM1BX,M","file":"static/js/main.32e46ff2.chunk.js","sourcesContent":["import axios from 'axios';\r\nexport default axios.create({\r\n    baseURL : 'https://www.enanyang.my/api/get/home/articles'\r\n})","import React from 'react';\nimport './App.css'\nimport { useState, useEffect } from 'react';\nimport ArticlesList from './ArticlesList';\n\n\n\nconst PAGE_NUMBER = 1;\n\nconst App = () => {\n  const [list, setList] = useState([]);\n  const [page, setPage] = useState(PAGE_NUMBER);\n\n  // const fetchData = () => {\n  //   console.log(\"fetchData is called\");\n\n  //   console.log(list);\n  // }\n\n\n  useEffect(async () => {\n    ArticlesList.get('', {\n      params: { page: page }\n    })\n      .then(response => {\n        setList([...list, ...response.data])\n        console.log(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    console.log(list, page);\n  }, [page])\n\n  const scrollToEnd = () => {\n    setPage(page + 1);\n  }\n\n  window.addEventListener('scroll', () => {\n    if (window.innerHeight + document.documentElement.scrollTop >= document.documentElement.offsetHeight) {\n\n      console.log(\"window.innerHeight : \", window.innerHeight);\n      console.log(\"document.documentElement.scrollTop : \", document.documentElement.scrollTop);\n      console.log(\"document.documentElement.offsetHeight : \", document.documentElement.offsetHeight);\n\n      scrollToEnd();\n    }\n  })\n\n\n  const renderedList = list.map((el, i) => {\n    return (\n      <div key={i} className='container' style={{ border: '1px solid black', margin: '10px' }}>\n        <h1> Name : {el.channel} </h1>\n        <h3> NID : {el.nid} </h3>\n      </div>)\n  })\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      {renderedList}\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}